{"version":3,"sources":["utils/omdb.js","components/MovieDetail.js","components/MovieItem.js","components/MovieList.js","components/NominateItem.js","components/NominationList.js","utils/localStorage.js","utils/processResponses.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["PATH","process","getMoviesByTitle","title","page","query","trim","replace","path","axios","get","then","res","data","catch","e","console","log","response","GetMovieDetail","id","MovieDetail","props","useState","movie","update","loading","setLoading","useEffect","a","Response","open","fetchData","Dialog","onClose","handleClose","fullScreen","mobile","className","AppBar","color","Toolbar","IconButton","edge","onClick","Close","DialogTitle","Typography","Title","active","spinner","Poster","src","alt","Image","Plot","imdbRating","Paper","Year","Rated","Released","Genre","Director","Actors","Country","Awards","Button","href","imdbID","target","MovieItem","dialog","toggle","handleToggle","other","nominate","TableRow","hover","TableCell","disabled","nominated","nominatable","AddCircleOutline","fontSize","MovieList","tableHeader","Search","totalResult","totalNomination","Sms","Beenhere","Table","TableHead","map","header","TableBody","results","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","rowsPerPage","onChangePage","newPage","handleChangePage","NominateItem","ListItem","ListItemIcon","DragHandle","ListItemText","denominate","RemoveCircleOutline","NominationList","React","isSaved","setIsSaved","list","LocalActivity","List","dragHandleSelector","lockAxis","onDrop","length","Inbox","Divider","clear","variant","startIcon","Delete","size","save","Save","saveState","key","state","serializedState","JSON","stringify","window","localStorage","setItem","processResponses","n_list","newRes","isNominated","some","m","Homepage","searchField","error","updateError","result","updateResult","updateTotalResult","parse","getItem","loadState","nominatedList","updateNomination","changePage","handleSearch","movies","totalResults","Error","reprocess","newList","newResult","handleDenominate","filter","handleNomSave","handleNomClear","removedIndex","addedIndex","items","arrayMove","isMobile","useMediaQuery","MovieFilter","TextField","label","placeholder","value","onChange","fullWidth","onKeyDown","processNomination","theme","createMuiTheme","typography","fontFamily","join","overrides","MuiPaper","root","backgroundColor","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cd82ccc.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst PATH = `https://www.omdbapi.com/?apikey=${API_KEY}`;\r\n\r\nexport function getMoviesByTitle(title, page) {\r\n  const query = title.trim().replace(' ', '+');\r\n\r\n  let path = PATH + `&s=${query}&type=movie&page=${page}`;\r\n  let response = undefined;\r\n  response = axios\r\n    .get(path)\r\n    .then((res) => res.data)\r\n    .then((data) => data)\r\n    .catch((e) => {\r\n      console.log(e.response);\r\n      return e.response.data;\r\n    });\r\n  return response;\r\n}\r\n\r\nexport function GetMovieDetail(id) {\r\n  const query = id;\r\n\r\n  let path = PATH + `&i=${query}`;\r\n  let response = undefined;\r\n  response = axios\r\n    .get(path)\r\n    .then((res) => res.data)\r\n    .then((data) => data)\r\n    .catch((e) => {\r\n      console.log(e.response);\r\n      return e.response.data;\r\n    });\r\n  return response;\r\n}\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  IconButton,\r\n  Paper,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState, Fragment } from 'react';\r\nimport { GetMovieDetail } from '../utils/omdb';\r\nimport '../styles/MovieDetail.css';\r\nimport { Close, Image } from '@material-ui/icons';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nexport default function MovieDetail(props) {\r\n  const [movie, update] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      const res = await GetMovieDetail(props.id);\r\n      if (res.Response === 'True') {\r\n        update(res);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    if (props.open) fetchData();\r\n  }, [props.open, props.id]);\r\n\r\n  const getLink = () => {\r\n    const link = `https://www.imdb.com/title/${movie.imdbID}/`;\r\n    return link;\r\n  };\r\n  return (\r\n    <Dialog\r\n      onClose={props.handleClose}\r\n      open={props.open}\r\n      fullScreen={props.mobile}\r\n      className=\"dialog-container\"\r\n    >\r\n      {props.mobile && (\r\n        <AppBar color=\"inherit\" className=\"dialog-bar\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={props.handleClose}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n            <DialogTitle>\r\n              <Typography>{movie.Title}</Typography>\r\n            </DialogTitle>\r\n          </Toolbar>\r\n        </AppBar>\r\n      )}\r\n      <LoadingOverlay active={loading} spinner>\r\n        {!loading && (\r\n          <Fragment>\r\n            <DialogTitle>\r\n              <Typography>{movie.Title}</Typography>\r\n            </DialogTitle>\r\n            <div className=\"dialog\">\r\n              <div className=\"intro\">\r\n                {movie.Poster !== 'N/A' ? (\r\n                  <img src={movie.Poster} alt={'N/A'} />\r\n                ) : (\r\n                  <Image />\r\n                )}\r\n                {movie.Plot !== 'N/A' && (\r\n                  <Typography className=\"plot\">{movie.Plot}</Typography>\r\n                )}\r\n                <Typography className=\"rating\">\r\n                  IMDB Rating: {movie.imdbRating}\r\n                </Typography>\r\n              </div>\r\n              <Typography>Additional Information</Typography>\r\n              <Paper className=\"details\">\r\n                <Typography>Year: {movie.Year}</Typography>\r\n                <Typography>Rated: {movie.Rated}</Typography>\r\n                <Typography>Released: {movie.Released}</Typography>\r\n                <Typography>Genre: {movie.Genre}</Typography>\r\n                <Typography>Director: {movie.Director}</Typography>\r\n                <Typography>Actors: {movie.Actors}</Typography>\r\n                <Typography>Country: {movie.Country}</Typography>\r\n                <Typography>Awards: {movie.Awards}</Typography>\r\n              </Paper>\r\n              <Button\r\n                href={getLink()}\r\n                color=\"primary\"\r\n                target=\"_blank\"\r\n                className=\"link\"\r\n              >\r\n                go to IMDb\r\n              </Button>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </LoadingOverlay>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TableCell, TableRow, Button, IconButton } from '@material-ui/core';\r\nimport { AddCircleOutline } from '@material-ui/icons';\r\nimport MovieDetail from './MovieDetail';\r\nimport { Image } from '@material-ui/icons';\r\n\r\nimport '../styles/MovieItem.css';\r\n\r\nexport default function MovieItem(props) {\r\n  const [dialog, toggle] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    toggle(!dialog);\r\n  };\r\n  const { nominate, ...other } = props;\r\n  return (\r\n    <TableRow hover className=\"row\">\r\n      {!props.mobile && (\r\n        <TableCell onClick={handleToggle} className=\"movie-cell\">\r\n          {props.Poster !== 'N/A' ? (\r\n            <img\r\n              src={props.Poster}\r\n              alt={'N/A'}\r\n              onClick={handleToggle}\r\n              className=\"img\"\r\n            />\r\n          ) : (\r\n            <div>\r\n              <Image />\r\n            </div>\r\n          )}\r\n        </TableCell>\r\n      )}\r\n      <TableCell className=\"movie-cell\" onClick={handleToggle}>\r\n        {props.Title}\r\n      </TableCell>\r\n      <TableCell>{props.Year}</TableCell>\r\n      <TableCell>\r\n        <IconButton\r\n          onClick={() => props.nominate(other)}\r\n          disabled={props.nominated || !props.nominatable}\r\n          className=\"add\"\r\n        >\r\n          <AddCircleOutline fontSize=\"medium\" />\r\n        </IconButton>\r\n      </TableCell>\r\n      <MovieDetail\r\n        open={dialog}\r\n        handleClose={handleToggle}\r\n        id={props.imdbID}\r\n        mobile={props.mobile}\r\n      />\r\n    </TableRow>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Toolbar,\r\n  TableFooter,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport { Sms, Beenhere, Search } from '@material-ui/icons';\r\nimport MovieItem from './MovieItem';\r\nimport '../styles/MovieList.css';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nexport default function MovieList(props) {\r\n  const tableHeader = props.mobile\r\n    ? ['Title', 'Year of Release', 'Nominate']\r\n    : ['Poster', 'Title', 'Year of Release', 'Nominate'];\r\n  return (\r\n    <div className={`movie_container${!props.mobile ? '-desktop' : ''}`}>\r\n      <h6 className=\"movie_container-title\">\r\n        {<Search />} Your search result: {props.totalResult} item(s)\r\n      </h6>\r\n      <Paper className=\"paper\">\r\n        {!!props.totalNomination && (\r\n          <Toolbar>\r\n            {props.totalNomination < 5 ? (\r\n              <Fragment>\r\n                <Sms className=\"sms-icon\" />\r\n                <Typography className=\"banner\">\r\n                  {`You have selected ${props.totalNomination} movie(s) for\r\n                  nominations.`}\r\n                </Typography>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <Beenhere className=\"sms-icon banner-completed\" />\r\n                <Typography className=\"banner-completed\">\r\n                  Your nomination list is ready!\r\n                </Typography>\r\n              </Fragment>\r\n            )}\r\n          </Toolbar>\r\n        )}\r\n\r\n        <LoadingOverlay active={props.loading} spinner>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {tableHeader.map((header) => (\r\n                  <TableCell>{header}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.results &&\r\n                props.results.map((movie) => (\r\n                  <MovieItem\r\n                    {...movie}\r\n                    nominate={props.nominate}\r\n                    nominatable={props.totalNomination <= 4}\r\n                    mobile={props.mobile}\r\n                  />\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[10]}\r\n                  colSpan={3}\r\n                  count={+props.totalResult}\r\n                  rowsPerPage={props.rowsPerPage}\r\n                  page={props.page}\r\n                  onChangePage={(e, newPage) => props.handleChangePage(newPage)}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </LoadingOverlay>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { RemoveCircleOutline, DragHandle } from '@material-ui/icons';\r\nimport MovieDetail from './MovieDetail';\r\nimport '../styles/NominateItem.css';\r\n\r\nexport default function NominateItem(props) {\r\n  const [dialog, toggle] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    toggle(!dialog);\r\n  };\r\n  return (\r\n    <ListItem hover className=\"row\">\r\n      <ListItemIcon className=\"drag-handle\">\r\n        <DragHandle />\r\n      </ListItemIcon>\r\n      <ListItemText onClick={handleToggle}>\r\n        <Typography className=\"nom-title\">{props.Title}</Typography>\r\n        <Typography className=\"nom-year\">{props.Year}</Typography>\r\n      </ListItemText>\r\n      <ListItemIcon className=\"remove\">\r\n        <IconButton color=\"inherit\" onClick={() => props.denominate(props)}>\r\n          <RemoveCircleOutline fontSize=\"small\" />\r\n        </IconButton>\r\n      </ListItemIcon>\r\n      <MovieDetail\r\n        open={dialog}\r\n        handleClose={handleToggle}\r\n        id={props.imdbID}\r\n        mobile={props.mobile}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport NominateItem from './NominateItem';\r\nimport '../styles/NominationList.css';\r\nimport { Delete, LocalActivity, Save, Inbox } from '@material-ui/icons';\r\nimport { Container, Draggable } from 'react-smooth-dnd';\r\n\r\nexport default function NominationList(props) {\r\n  const [isSaved, setIsSaved] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsSaved(false);\r\n  }, [props.list]);\r\n\r\n  return (\r\n    <div className={`container ${!props.mobile ? '-desktop' : ''}`}>\r\n      <h6 className=\"container-title\">\r\n        {<LocalActivity className=\"icon\" />}Your nominations\r\n      </h6>\r\n      <Paper className=\"paper\">\r\n        <List>\r\n          <Container\r\n            dragHandleSelector=\".drag-handle\"\r\n            lockAxis=\"y\"\r\n            onDrop={props.onDrop}\r\n          >\r\n            {!!props.list.length ? (\r\n              props.list.map((movie, id) => (\r\n                <Draggable key={props.id}>\r\n                  <NominateItem {...movie} denominate={props.denominate} />\r\n                </Draggable>\r\n              ))\r\n            ) : (\r\n              <ListItem>\r\n                <Typography className=\"empty\">\r\n                  <Inbox />\r\n                  List empty\r\n                </Typography>\r\n              </ListItem>\r\n            )}\r\n          </Container>\r\n          <Divider />\r\n          <div className=\"nom_buttons\">\r\n            <Button\r\n              onClick={() => {\r\n                props.clear();\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<Delete />}\r\n              size=\"small\"\r\n              disabled={!props.list.length}\r\n            >\r\n              Discard\r\n            </Button>\r\n            <Button\r\n              onClick={(e) => {\r\n                props.save();\r\n                setIsSaved(true);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              startIcon={<Save />}\r\n              disabled={isSaved || !props.list.length}\r\n            >\r\n              {isSaved ? 'Saved' : 'Save'}\r\n            </Button>\r\n          </div>\r\n        </List>\r\n      </Paper>\r\n\r\n      <h6 className=\"nom_subtitle\">\r\n        Your list is saved in your browser's storage so you can always come back\r\n        later.\r\n      </h6>\r\n    </div>\r\n  );\r\n}\r\n","export const loadState = (key) => {\r\n  let serializedState;\r\n  try {\r\n    serializedState = JSON.parse(window.localStorage.getItem(key));\r\n  } catch (e) {\r\n    console.log(`failed to load '${key}' localStorage state`);\r\n  }\r\n  return serializedState;\r\n};\r\n\r\nexport const saveState = (key, state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    window.localStorage.setItem(key, serializedState);\r\n  } catch {\r\n    console.log('localStorage:', 'failed to save state');\r\n  }\r\n};\r\n","export function processResponses(res = [], n_list = []) {\r\n  const newRes = res.map((movie) => {\r\n    const isNominated = n_list.some((m) => movie.imdbID === m.imdbID);\r\n    if (isNominated) movie.nominated = true;\r\n    else movie.nominated = false;\r\n    return movie;\r\n  });\r\n  return newRes;\r\n}\r\n\r\nexport function processNomination(movie = {}, n_list = []) {\r\n  const isNominated = n_list.some((m) => movie.imdbID === m.imdbID);\r\n  if (isNominated) return n_list;\r\n  else return [...n_list, movie];\r\n}\r\n\r\nexport function denominate(movie = {}, n_list = []) {\r\n  const newRes = n_list.filter((m) => m.imdbID !== movie.imdbID);\r\n  return newRes;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Button, Paper, TextField } from '@material-ui/core';\r\nimport MovieList from './MovieList';\r\nimport NominationList from './NominationList';\r\nimport { loadState, saveState } from '../utils/localStorage';\r\nimport { getMoviesByTitle } from '../utils/omdb';\r\nimport {\r\n  processResponses,\r\n  processNomination,\r\n  denominate,\r\n} from '../utils/processResponses';\r\nimport '../styles/Homepage.css';\r\nimport { MovieFilter } from '@material-ui/icons';\r\nimport arrayMove from 'array-move';\r\n\r\nexport default function Homepage(props) {\r\n  const [searchField, update] = useState('');\r\n  const [error, updateError] = useState('');\r\n\r\n  const [result, updateResult] = useState([]);\r\n  const [totalResult, updateTotalResult] = useState(0);\r\n  const [nominatedList, updateNomination] = useState(\r\n    loadState('nominations') || []\r\n  );\r\n  const [page, changePage] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    saveState('nominations', nominatedList);\r\n  }, [nominatedList]);\r\n\r\n  const handleChangePage = (newPage) => {\r\n    handleSearch(newPage);\r\n    changePage(newPage);\r\n  };\r\n\r\n  const handleSearch = async (newPage = page) => {\r\n    updateError('');\r\n    if (!searchField) return;\r\n    setLoading(true);\r\n    const res = await getMoviesByTitle(searchField, newPage + 1);\r\n    if (res.Response === 'True') {\r\n      const movies = processResponses(res.Search, nominatedList);\r\n      updateResult(movies);\r\n      updateTotalResult(res.totalResults);\r\n    }\r\n    setLoading(false);\r\n    if (res.Error) updateError(res.Error);\r\n  };\r\n\r\n  const reprocess = (newList) => {\r\n    const newResult = processResponses(result, newList);\r\n    updateResult(newResult);\r\n  };\r\n\r\n  const handleDenominate = (movie) => {\r\n    const newList = denominate(movie, nominatedList);\r\n    updateNomination(newList);\r\n    reprocess(newList);\r\n  };\r\n\r\n  const handleNominate = (movie) => {\r\n    const newList = processNomination(movie, nominatedList);\r\n    updateNomination(newList);\r\n    reprocess(newList);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    update('');\r\n    updateResult([]);\r\n    updateTotalResult(0);\r\n    changePage(0);\r\n    updateError('');\r\n  };\r\n\r\n  const handleNomSave = () => {\r\n    saveState('nominations', nominatedList);\r\n  };\r\n  const handleNomClear = () => {\r\n    updateNomination([]);\r\n    reprocess([]);\r\n  };\r\n\r\n  const onDrop = ({ removedIndex, addedIndex }) => {\r\n    updateNomination((items) => arrayMove(items, removedIndex, addedIndex));\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') handleSearch();\r\n  };\r\n\r\n  const isMobile = useMediaQuery({ query: '(max-width: 740px)' });\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h3>The Shoppies: Movie awards for entrepreneurs</h3>\r\n      <h6>Find your Top 5 Movies and add them to your Nomination list.</h6>\r\n      {isMobile && (\r\n        <NominationList\r\n          list={nominatedList}\r\n          denominate={handleDenominate}\r\n          onDrop={onDrop}\r\n          clear={handleNomClear}\r\n          save={handleNomSave}\r\n          isMobile\r\n        />\r\n      )}\r\n      <span>\r\n        <h5 className=\"title\">Find a movie {<MovieFilter />}</h5>\r\n      </span>\r\n      <Paper className=\"search\">\r\n        <div className=\"paper\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Enter a movie title\"\r\n            variant=\"outlined\"\r\n            placeholder=\"The Wolf of Wall Street\"\r\n            value={searchField}\r\n            onChange={(e) => update(e.target.value)}\r\n            fullWidth\r\n            onKeyDown={handleKeyPress}\r\n          />\r\n          <p className=\"error\">{error}</p>\r\n          <div className=\"buttons\">\r\n            <Button\r\n              onClick={() => {\r\n                handleClear();\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Button\r\n              onClick={handleSearch}\r\n              variant=\"outlined\"\r\n              disabled={!searchField}\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className=\"list\">\r\n        <MovieList\r\n          loading={loading}\r\n          totalResult={totalResult}\r\n          results={result}\r\n          nominate={handleNominate}\r\n          totalNomination={nominatedList.length}\r\n          handleChangePage={handleChangePage}\r\n          page={page}\r\n          rowsPerPage={10}\r\n          mobile={isMobile}\r\n        />\r\n        {!isMobile && (\r\n          <NominationList\r\n            list={nominatedList}\r\n            denominate={handleDenominate}\r\n            onDrop={onDrop}\r\n            clear={handleNomClear}\r\n            save={handleNomSave}\r\n            mobile={isMobile}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Homepage from './components/Homepage';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Montserrat', 'sans-serif'].join(','),\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: '#f8f3e6',\n      },\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ThemeProvider theme={theme}>\n          <Homepage />\n        </ThemeProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
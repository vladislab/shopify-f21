{"version":3,"sources":["utils/omdb.js","components/MovieDetail.js","components/MovieItem.js","components/MovieList.js","components/NominateItem.js","components/NominationList.js","utils/localStorage.js","utils/processResponses.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["PATH","process","getMoviesByTitle","title","page","query","trim","replace","path","axios","get","then","res","data","catch","e","console","log","response","GetMovieDetail","id","MovieDetail","props","useState","movie","update","useEffect","a","Response","open","fetchData","Dialog","onClose","handleClose","DialogTitle","Typography","Title","className","src","Poster","alt","Year","Plot","imdbRating","Paper","Rated","Released","Genre","Director","Actors","Country","Awards","Button","href","imdbID","color","target","MovieItem","dialog","toggle","handleToggle","other","nominate","TableRow","hover","TableCell","onClick","disabled","nominated","nominatable","AddToQueue","MovieList","Search","totalResult","totalNomination","Toolbar","Sms","Beenhere","Table","TableHead","map","header","TableBody","results","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","rowsPerPage","onChangePage","newPage","handleChangePage","NominateItem","denominate","RemoveFromQueue","NominationList","LocalActivity","list","processResponses","n_list","newRes","isNominated","some","m","Homepage","searchField","error","updateError","result","updateResult","updateTotalResult","key","serializedState","JSON","parse","window","localStorage","getItem","loadState","nominatedList","updateNomination","changePage","state","stringify","setItem","saveState","handleSearch","movies","totalResults","Error","reprocess","newList","newResult","MovieFilter","TextField","label","variant","placeholder","value","onChange","fullWidth","processNomination","length","filter","theme","createMuiTheme","typography","fontFamily","join","overrides","MuiPaper","root","backgroundColor","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a927b7d.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst PATH = `https://www.omdbapi.com/?apikey=${API_KEY}`;\r\n\r\nexport function getMoviesByTitle(title, page) {\r\n  const query = title.trim().replace(' ', '+');\r\n\r\n  let path = PATH + `&s=${query}&type=movie&page=${page}`;\r\n  let response = undefined;\r\n  response = axios\r\n    .get(path)\r\n    .then((res) => res.data)\r\n    .then((data) => data)\r\n    .catch((e) => {\r\n      console.log(e.response);\r\n      return e.response.data;\r\n    });\r\n  return response;\r\n}\r\n\r\nexport function GetMovieDetail(id) {\r\n  const query = id;\r\n\r\n  let path = PATH + `&i=${query}`;\r\n  let response = undefined;\r\n  response = axios\r\n    .get(path)\r\n    .then((res) => res.data)\r\n    .then((data) => data)\r\n    .catch((e) => {\r\n      console.log(e.response);\r\n      return e.response.data;\r\n    });\r\n  return response;\r\n}\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GetMovieDetail } from '../utils/omdb';\r\nimport '../styles/MovieDetail.css';\r\n\r\nexport default function MovieDetail(props) {\r\n  const [movie, update] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await GetMovieDetail(props.id);\r\n      if (res.Response === 'True') {\r\n        update(res);\r\n      }\r\n    }\r\n    if (props.open) fetchData();\r\n  }, [props.open, props.id]);\r\n\r\n  const getLink = () => {\r\n    const link = `https://www.imdb.com/title/${movie.imdbID}/`;\r\n    return link;\r\n  };\r\n  return (\r\n    <Dialog onClose={props.handleClose} open={props.open}>\r\n      <DialogTitle>\r\n        <Typography>{movie.Title}</Typography>\r\n      </DialogTitle>\r\n      <div className=\"dialog\">\r\n        <div className=\"intro\">\r\n          <img src={movie.Poster} alt={props.Title + props.Year} />\r\n          <Typography className=\"plot\">{movie.Plot}</Typography>\r\n          <Typography className=\"rating\">\r\n            IMDB Rating: {movie.imdbRating}\r\n          </Typography>\r\n        </div>\r\n        <Typography>Additional Information</Typography>\r\n        <Paper className=\"details\">\r\n          <Typography>Year: {movie.Year}</Typography>\r\n          <Typography>Rated: {movie.Rated}</Typography>\r\n          <Typography>Released: {movie.Released}</Typography>\r\n          <Typography>Genre: {movie.Genre}</Typography>\r\n          <Typography>Director: {movie.Director}</Typography>\r\n          <Typography>Actors: {movie.Actors}</Typography>\r\n          <Typography>Country: {movie.Country}</Typography>\r\n          <Typography>Awards: {movie.Awards}</Typography>\r\n        </Paper>\r\n        <Button\r\n          href={getLink()}\r\n          color=\"primary\"\r\n          target=\"_blank\"\r\n          className=\"link\"\r\n        >\r\n          go to IMDb\r\n        </Button>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TableCell, TableRow, Button } from '@material-ui/core';\r\nimport { AddToQueue } from '@material-ui/icons';\r\nimport MovieDetail from './MovieDetail';\r\n\r\nimport '../styles/MovieItem.css';\r\n\r\nexport default function MovieItem(props) {\r\n  const [dialog, toggle] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    toggle(!dialog);\r\n  };\r\n  const { nominate, ...other } = props;\r\n  return (\r\n    <TableRow hover className=\"row\">\r\n      <TableCell>\r\n        <img\r\n          className=\"img\"\r\n          onClick={handleToggle}\r\n          src={props.Poster}\r\n          alt={`${props.Title}(${props.Year})`}\r\n        />\r\n      </TableCell>\r\n      <TableCell className=\".movie-title\" onClick={handleToggle}>\r\n        {props.Title}\r\n      </TableCell>\r\n      <TableCell>{props.Year}</TableCell>\r\n      <TableCell>\r\n        <Button\r\n          onClick={() => props.nominate(other)}\r\n          disabled={props.nominated || !props.nominatable}\r\n        >\r\n          <AddToQueue />\r\n        </Button>\r\n      </TableCell>\r\n      <MovieDetail open={dialog} handleClose={handleToggle} id={props.imdbID} />\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Toolbar,\r\n  TableFooter,\r\n  TablePagination,\r\n} from '@material-ui/core';\r\nimport { Sms, Beenhere, Search } from '@material-ui/icons';\r\nimport MovieItem from './MovieItem';\r\nimport '../styles/MovieList.css';\r\nimport { Fragment } from 'react';\r\n\r\nexport default function MovieList(props) {\r\n  const tableHeader = ['Poster', 'Title', 'Year of Release', 'Nominate'];\r\n  return (\r\n    <div className=\"movie_container\">\r\n      <h6 className=\"movie_container-title\">\r\n        {<Search />} Your search result: {props.totalResult} item(s)\r\n      </h6>\r\n      <Paper className=\"paper\">\r\n        {!!props.totalNomination && (\r\n          <Toolbar>\r\n            {props.totalNomination < 5 ? (\r\n              <Fragment>\r\n                <Sms className=\"sms-icon\" />\r\n                <Typography className=\"banner\">\r\n                  {`You have selected ${props.totalNomination} movie(s) for\r\n                  nominations.`}\r\n                </Typography>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <Beenhere className=\"sms-icon banner-completed\" />\r\n                <Typography className=\"banner-completed\">\r\n                  You have completed your nomination list!\r\n                </Typography>\r\n              </Fragment>\r\n            )}\r\n          </Toolbar>\r\n        )}\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {tableHeader.map((header) => (\r\n                <TableCell>{header}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.results &&\r\n              props.results.map((movie) => (\r\n                <MovieItem\r\n                  {...movie}\r\n                  nominate={props.nominate}\r\n                  nominatable={props.totalNomination <= 4}\r\n                />\r\n              ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10]}\r\n                colSpan={3}\r\n                count={+props.totalResult}\r\n                rowsPerPage={props.rowsPerPage}\r\n                page={props.page}\r\n                onChangePage={(e, newPage) => props.handleChangePage(newPage)}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { TableCell, TableRow, Button } from '@material-ui/core';\r\nimport { RemoveFromQueue } from '@material-ui/icons';\r\nimport MovieDetail from './MovieDetail';\r\nimport '../styles/NominateItem.css';\r\n\r\nexport default function NominateItem(props) {\r\n  const [dialog, toggle] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    toggle(!dialog);\r\n  };\r\n  return (\r\n    <TableRow hover className=\"row\">\r\n      <TableCell onClick={handleToggle} className=\"nom-title\">\r\n        {props.Title}\r\n      </TableCell>\r\n      <TableCell onClick={handleToggle} className=\"nom-year\">\r\n        {props.Year}\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button onClick={() => props.denominate(props)}>\r\n          <RemoveFromQueue />\r\n        </Button>\r\n      </TableCell>\r\n      <MovieDetail open={dialog} handleClose={handleToggle} id={props.imdbID} />\r\n    </TableRow>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport NominateItem from './NominateItem';\r\nimport '../styles/NominationList.css';\r\nimport { LocalActivity } from '@material-ui/icons';\r\n\r\nexport default function NominationList(props) {\r\n  const tableHeader = ['Title', 'Year', ''];\r\n  return (\r\n    <div className=\"container\">\r\n      <h6 className=\"container-title\">\r\n        {<LocalActivity className=\"icon\" />}Your nominations\r\n      </h6>\r\n      <Paper className=\"paper\">\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {tableHeader.map((header) => (\r\n                <TableCell>{header}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!!props.list &&\r\n              props.list.map((movie) => (\r\n                <NominateItem {...movie} denominate={props.denominate} />\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","export const loadState = (key) => {\r\n  let serializedState;\r\n  try {\r\n    serializedState = JSON.parse(window.localStorage.getItem(key));\r\n  } catch (e) {\r\n    console.log(`failed to load '${key}' localStorage state`);\r\n  }\r\n  return serializedState;\r\n};\r\n\r\nexport const saveState = (key, state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    window.localStorage.setItem(key, serializedState);\r\n  } catch {\r\n    console.log('localStorage:', 'failed to save state');\r\n  }\r\n};\r\n","export function processResponses(res = [], n_list = []) {\r\n  const newRes = res.map((movie) => {\r\n    const isNominated = n_list.some((m) => movie.imdbID === m.imdbID);\r\n    if (isNominated) movie.nominated = true;\r\n    else movie.nominated = false;\r\n    return movie;\r\n  });\r\n  return newRes;\r\n}\r\n\r\nexport function processNomination(movie = {}, n_list = []) {\r\n  const isNominated = n_list.some((m) => movie.imdbID === m.imdbID);\r\n  if (isNominated) return n_list;\r\n  else return [...n_list, movie];\r\n}\r\n\r\nexport function denominate(movie = {}, n_list = []) {\r\n  const newRes = n_list.filter((m) => m.imdbID !== movie.imdbID);\r\n  return newRes;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Paper, TextField } from '@material-ui/core';\r\nimport MovieList from './MovieList';\r\nimport NominationList from './NominationList';\r\nimport { loadState, saveState } from '../utils/localStorage';\r\nimport { getMoviesByTitle } from '../utils/omdb';\r\nimport {\r\n  processResponses,\r\n  processNomination,\r\n  denominate,\r\n} from '../utils/processResponses';\r\nimport '../styles/Homepage.css';\r\nimport { MovieFilter } from '@material-ui/icons';\r\n\r\nexport default function Homepage(props) {\r\n  const [searchField, update] = useState('');\r\n  const [error, updateError] = useState('');\r\n\r\n  const [result, updateResult] = useState([]);\r\n  const [totalResult, updateTotalResult] = useState(0);\r\n  const [nominatedList, updateNomination] = useState(\r\n    loadState('nominations') || []\r\n  );\r\n  const [page, changePage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    saveState('nominations', nominatedList);\r\n  }, [nominatedList]);\r\n\r\n  const handleChangePage = (page) => {\r\n    handleSearch(page);\r\n    changePage(page);\r\n  };\r\n\r\n  const handleSearch = async (page) => {\r\n    updateError('');\r\n    if (!searchField) return;\r\n    const res = await getMoviesByTitle(searchField, page + 1);\r\n    if (res.Response === 'True') {\r\n      const movies = processResponses(res.Search, nominatedList);\r\n      updateResult(movies);\r\n      updateTotalResult(res.totalResults);\r\n    }\r\n    if (res.Error) updateError(res.Error);\r\n  };\r\n\r\n  const reprocess = (newList) => {\r\n    const newResult = processResponses(result, newList);\r\n    updateResult(newResult);\r\n  };\r\n\r\n  const handleDenominate = (movie) => {\r\n    const newList = denominate(movie, nominatedList);\r\n    updateNomination(newList);\r\n    reprocess(newList);\r\n  };\r\n\r\n  const handleNominate = (movie) => {\r\n    const newList = processNomination(movie, nominatedList);\r\n    updateNomination(newList);\r\n    reprocess(newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h3>The Shoppies: Movie awards for entrepreneurs</h3>\r\n      <span>\r\n        <h5 className=\"title\">Find a movie {<MovieFilter />}</h5>\r\n      </span>\r\n      <Paper className=\"search\">\r\n        <div className=\"paper\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Enter a movie title\"\r\n            variant=\"outlined\"\r\n            placeholder=\"The Wolf of Wall Street\"\r\n            value={searchField}\r\n            onChange={(e) => update(e.target.value)}\r\n            fullWidth\r\n          />\r\n          <p className=\"error\">{error}</p>\r\n          <div className=\"buttons\">\r\n            <Button\r\n              onClick={() => {\r\n                update('');\r\n                updateResult([]);\r\n                updateTotalResult(0);\r\n                changePage(0);\r\n                updateError('');\r\n              }}\r\n              variant=\"outlined\"\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Button\r\n              onClick={handleSearch}\r\n              variant=\"outlined\"\r\n              disabled={!searchField}\r\n            >\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className=\"list\">\r\n        <MovieList\r\n          totalResult={totalResult}\r\n          results={result}\r\n          nominate={handleNominate}\r\n          totalNomination={nominatedList.length}\r\n          handleChangePage={handleChangePage}\r\n          page={page}\r\n          rowsPerPage={10}\r\n        />\r\n        <NominationList list={nominatedList} denominate={handleDenominate} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Homepage from './components/Homepage';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Montserrat', 'sans-serif'].join(','),\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: '#f8f3e6',\n      },\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ThemeProvider theme={theme}>\n          <Homepage />\n        </ThemeProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}